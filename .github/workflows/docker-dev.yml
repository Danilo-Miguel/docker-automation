name: Docker Dev Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # 1️⃣ Preparação e testes em paralelo
  auth-service-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          docker-compose --version

      - name: Mask MONGO_URI secret
        run: echo "::add-mask::${{ secrets.MONGO_URI }}"

      - name: Create .env file for auth-service
        working-directory: burguer-app
        run: |
          cat <<EOF > auth-service/.env
          MONGO_URI=${{ secrets.MONGO_URI }}
          EOF

      - name: Bring up Docker Compose (Dev)
        working-directory: burguer-app
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.override.yml down
          docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d --build

      - name: Wait for MongoDB
        run: |
          for i in {1..30}; do
            nc -z localhost 27017 && break
            echo "Waiting for MongoDB..."
            sleep 2
          done

      - name: Test auth-service
        working-directory: burguer-app/auth-service
        run: |
          pip install -r requirements.txt
          pytest -v

      - name: Shut down containers
        working-directory: burguer-app
        run: docker-compose down --volumes

  order-service-test:
    runs-on: ubuntu-latest
    needs: auth-service-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Mask MONGO_URI secret
        run: echo "::add-mask::${{ secrets.MONGO_URI }}"
      - name: Create .env file for order-service
        working-directory: burguer-app
        run: |
          cat <<EOF > order-service/.env
          MONGO_URI=${{ secrets.MONGO_URI }}
          EOF
      - name: Test order-service
        working-directory: burguer-app/order-service
        run: |
          pip install -r requirements.txt
          pytest -v

  product-service-test:
    runs-on: ubuntu-latest
    needs: auth-service-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Mask MONGO_URI secret
        run: echo "::add-mask::${{ secrets.MONGO_URI }}"
      - name: Create .env file for product-service
        working-directory: burguer-app
        run: |
          cat <<EOF > product-service/.env
          MONGO_URI=${{ secrets.MONGO_URI }}
          EOF
      - name: Test product-service
        working-directory: burguer-app/product-service
        run: |
          pip install -r requirements.txt
          pytest -v

  user-service-test:
    runs-on: ubuntu-latest
    needs: auth-service-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Mask MONGO_URI secret
        run: echo "::add-mask::${{ secrets.MONGO_URI }}"
      - name: Create .env file for user-service
        working-directory: burguer-app
        run: |
          cat <<EOF > user-service/.env
          MONGO_URI=${{ secrets.MONGO_URI }}
          EOF
      - name: Test user-service
        working-directory: burguer-app/user-service
        run: |
          pip install -r requirements.txt
          pytest -v
