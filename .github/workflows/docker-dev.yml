name: Docker dev workflow

on:
    push:
        branches:
        - aula-07
    pull_request:
        branches:
        - aula-07

jobs:
  docker-up:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        if ! command -v docker-compose &> /dev/null
        then
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
        fi

    - name:  Mascarar variáveis de ambiente sensíveis
      run: |
        echo "::add-mask::${{ secrets.MONGO_URI }}"    

    - name: Cria .env para todos os serviços
      working-directory: burguer-app
      run: |
        for service in auth-service user-service order-service product-service; do
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > $service/.env
        done

    - name: Versionamento
      id: semver
      run: |
       VERSION=$(echo "${GITHUB_SHA}" | cut -c1-7)
       echo "IMAGE_TAG=${VERSION}" >> $GITHUB_ENV

    - name: Build and run Docker containers
      working-directory: burguer-app
      run: |
        
        docker-compose -f docker-compose.yml -f docker-compose.override.yml down
          for service in auth-service user-service order-service product-service; do
            docker build -t burguer-app-${service}:${{ env.IMAGE_TAG }} ./$service
            docker tag burguer-app-${service}:${{ env.IMAGE_TAG }} burguer-app-${service}:latest
          done
        docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d --build

    - name: Waiting for mongo to be ready
      run: |
        for i in {1..30}; do
          nc -z localhost 27017 && break
          echo "Waiting for MongoDB to start..."
          sleep 2
        done

    - name: Test auth-service
      working-directory: burguer-app/auth-service
      run: |
        pip install -r requirements.txt
        pytest -v
    
    - name: Test User-service
      working-directory: burguer-app/user-service
      run: |
        pip install -r requirements.txt
        pytest -v
        
    - name: Test order-service
      working-directory: burguer-app/order-service
      run: |
        pip install -r requirements.txt
        pytest -v    

    - name: Test product-service
      working-directory: burguer-app/product-service
      run: |
        pip install -r requirements.txt
        pytest -v


    - name: Shut down Docker containers
      working-directory: burguer-app
      run: docker-compose down --volumes

    - name: Verificar vulnerabilidades nas imagens com trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://github.com/aquasecurity/trivy/releases/download/v0.66.0/trivy_0.66.0_Linux-64bit.deb
        sudo dpkg -i trivy_0.66.0_Linux-64bit.deb

    - name: Scan auth-service image
      run: trivy image --severity HIGH,CRITICAL  burguer-app-auth-service:latest

    - name: Scan user-service image
      run: trivy image --severity HIGH,CRITICAL  burguer-app-user-service:latest

    - name: Scan order-service image
      run: trivy image --severity HIGH,CRITICAL  burguer-app-order-service:latest

    - name: Scan product-service image
      run: trivy image --severity HIGH,CRITICAL  burguer-app-product-service:latest

    - name: List Docker images
      run: docker images  

    - name: Roolback
      if: failure()
      working-directory: burguer-app
      run: |
       echo "Roolback automático: usado as imagens anteriores"

       for service in auth-service user-service order-service product-service; do
         PREV_TAG=$(docker images burguer-app-${service} --format "{{.Tag}}" | grep -v latest | head -n 2)

         if [ -z "$PREV_TAG" ]; then
           echo "No previous image found for $service, skipping rollback."
         else
           docker tag burguer-app-${service}:${PREV_TAG} burguer-app-${service}:latest
           echo "Rolled back $service to tag $PREV_TAG"
         fi 
        done
       docker-compose -f docker-compose.yml -f docker-compose.override.yml down 
       docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d --build
