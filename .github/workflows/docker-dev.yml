name: Docker dev workflow

on:
    push:
        branches:
        - aula-06
    pull_request:
        branches:
        - aula-06

jobs:
  docker-up:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Install Docker Compose
      run: |
        if ! command -v docker-compose &> /dev/null
        then
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
        fi

    - name:  Mascarar variáveis de ambiente sensíveis
      run: |
        echo "::add-mask::${{ secrets.MONGO_URI }}"    

    - name: Cria .env para todos os serviços
      working-directory: burguer-app
      run: |
        for service in auth-service user-service order-service product-service; do
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > $service/.env
        done

    - name: Build and run Docker containers
      working-directory: burguer-app
      run: |
        docker-compose -f docker-compose.yml -f docker-compose.override.yml down
        docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d --build

    - name: Waiting for mongo to be ready
      run: 
        for i in {1..30}; do
          nc -z localhost 27017 && echo "MongoDB is up!" && exit 0
          echo "Waiting for MongoDB to start..."
          sleep 2
        done

    - name: Test auth-service
      working-directory: burguer-app/auth-service
      run: |
        pip install -r requirements.txt
        pytest -v
    
    - name: Test User-service
      working-directory: burguer-app/user-service
      run: |
        pip install -r requirements.txt
        pytest -v
        
    - name: Test order-service
      working-directory: burguer-app/order-service
      run: |
        pip install -r requirements.txt
        pytest -v    

    - name: Test product-service
      working-directory: burguer-app/product-service
      run: |
        pip install -r requirements.txt
        pytest -v


    - name: Shut down Docker containers
      working-directory: burguer-app
      run: docker-compose down --volumes
