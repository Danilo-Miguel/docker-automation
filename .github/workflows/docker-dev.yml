name: Docker Dev Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  docker-up:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Clonar o reposit√≥rio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3Ô∏è‚É£ Instalar Docker Compose
      - name: Install Docker Compose
        run: |
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          docker-compose --version

      # 4Ô∏è‚É£ Mascarar MONGO_URI secret
      - name: Mask MONGO_URI secret
        run: echo "::add-mask::${{ secrets.MONGO_URI }}"

      # 5Ô∏è‚É£ Criar .env para todos os microsservi√ßos
      - name: Create .env files
        working-directory: burguer-app
        run: |
          for service in user-service product-service order-service auth-service; do
            mkdir -p $service
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" > $service/.env
          done

      # 6Ô∏è‚É£ Exportar vari√°vel de ambiente (opcional)
      - name: Export MONGO_URI
        run: export MONGO_URI=${{ secrets.MONGO_URI }}

      # 7Ô∏è‚É£ Subir containers (override de dev)
      - name: Bring up Docker Compose (Dev)
        working-directory: burguer-app
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.override.yml down --volumes
          docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d --build

      # 8Ô∏è‚É£ Esperar MongoDB inicializar
      - name: Wait for MongoDB
        run: |
          for i in {1..30}; do
            nc -z localhost 27017 && break
            echo "Waiting for MongoDB..."
            sleep 2
          done

      # 9Ô∏è‚É£ Testar todos os servi√ßos (paralelo poss√≠vel em jobs separados se desejar)
      - name: Test auth-service
        working-directory: burguer-app/auth-service
        run: |
          pip install -r requirements.txt
          pytest -v

      - name: Test order-service
        working-directory: burguer-app/order-service
        run: |
          pip install -r requirements.txt
          pytest -v

      - name: Test product-service
        working-directory: burguer-app/product-service
        run: |
          pip install -r requirements.txt
          pytest -v

      - name: Test user-service
        working-directory: burguer-app/user-service
        run: |
          pip install -r requirements.txt
          pytest -v

      # üîü Parar containers ao final
      - name: Shut down containers
        working-directory: burguer-app
        run: docker-compose down --volumes

      # 1Ô∏è‚É£1Ô∏è‚É£ Verifica√ß√£o de vulnerabilidades com Trivy
      - name: Run Trivy vulnerability scanner (auth-service)
        working-directory: burguer-app/auth-service
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy image --severity HIGH,CRITICAL burguer-app_auth-service:latest