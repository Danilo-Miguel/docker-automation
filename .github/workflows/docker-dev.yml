name: Docker Dev Workflow

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  docker-up:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Clona o reposit√≥rio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Configura Docker Buildx (opcional, mas recomendado)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3Ô∏è‚É£ Instala Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # 4Ô∏è‚É£ Cria .env para todos os microsservi√ßos usando GitHub Secrets
      - name: Create .env files
        working-directory: burguer-app
        run: |
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > user-service/.env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > product-service/.env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > order-service/.env
          echo "MONGO_URI=${{ secrets.MONGO_URI }}" > auth-service/.env

      # 5Ô∏è‚É£ Sobe os containers (com override de dev)
      - name: Bring up Docker Compose (Dev)
        working-directory: burguer-app
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.override.yml down
          docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d --build

      # 6Ô∏è‚É£ Aguardar MongoDB inicializar
      - name: Wait for MongoDB
        run: sleep 20

      # 7Ô∏è‚É£ Testar auth-service
      - name: Test auth-service
        working-directory: burguer-app/auth-service
        run: |
          pip install -r requirements.txt
          pytest -v

      # 8Ô∏è‚É£ Testar order-service
      - name: Test order-service
        working-directory: burguer-app/order-service
        run: |
          pip install -r requirements.txt
          pytest -v

      # 9Ô∏è‚É£ Testar product-service
      - name: Test product-service
        working-directory: burguer-app/product-service
        run: |
          pip install -r requirements.txt
          pytest -v

      # üîü Testar user-service
      - name: Test user-service
        working-directory: burguer-app/user-service
        run: |
          pip install -r requirements.txt
          pytest -v

      # Parar containers ao final
      - name: Shut down containers
        working-directory: burguer-app
        run: docker-compose down
